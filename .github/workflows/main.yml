name: Test & Release

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      retry:
        description: 'Retry the same release, do not bump.'
        required: false
        default: ''

jobs:
  test:
    name: Python ${{ matrix.python-version }} tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4.1.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: abatilo/actions-poetry@v2.1.4
        with:
          poetry-version: 1.1.11

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install

      - name: Install dependencies ci
        run: poetry run pip install pytest-github-actions-annotate-failures

      - name: pytest
        run: make test

  mypy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v4.1.0
        with:
          python-version: 3.8
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2.1.4
        with:
          poetry-version: 1.1.11

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install

      - name: mypy
        run: make mypy

  beautify:
    name: Beautify
    runs-on: ubuntu-latest
    concurrency: push
    needs: [test, mypy]
    outputs:
      new_sha: ${{ steps.sha.outputs.SHA }}

    steps:
      - name: Set up Python 3.9
        uses: actions/setup-python@v4.1.0
        with:
          python-version: 3.9

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Poetry
        uses: abatilo/actions-poetry@v2.1.4
        with:
          poetry-version: 1.1.11
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        run: poetry install

      - name: Beautify
        run: |
          poetry run black .
          poetry run isort .

      - name: Commit and push changes
        uses: github-actions-x/commit@v2.8
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'style: beautify ${{ github.sha }}'
          name: github-actions
          email: action@github.com

      - name: Get new SHA
        id: sha
        run: |
          new_sha=$(git rev-parse HEAD)
          echo "::set-output name=SHA::$new_sha"

  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    concurrency: push
    needs: [test, mypy, beautify]
    if: github.repository == 'mom1/project-semantic-release'

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ needs.beautify.outputs.new_sha }}
      - name: Fetch main
        run: git fetch --prune origin +refs/heads/main:refs/remotes/origin/main
      - name: Python Semantic Release
        uses: ./
        env:
          RETRY: ${{ github.event.inputs.retry }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          repository_username: ${{ secrets.PYPI_USERNAME }}
          repository_password: ${{ secrets.PYPI_PASSWORD }}
