[tool.poetry]
name = "project-semantic-release"
version = "1.0.2"
description = "Automatic semantic versioning for python projects"
authors = ["MaxST <mstolpasov@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/mom1/project-semantic-release"
repository = "https://github.com/mom1/project-semantic-release"

classifiers = [
        "Environment :: Console",
        "License :: OSI Approved :: MIT License",
        "Programming Language :: Python :: 3",
        "Programming Language :: Python :: 3.7",
        "Programming Language :: Python :: 3.8",
        "Programming Language :: Python :: 3.9",
]

packages = [
    { include = "semantic_release" },
]

keywords = ["semantic-release", "semantic-version", "release-automation", "semver-release", "release"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.urls]
"Issue Tracker" = "https://github.com/mom1/project-semantic-release/issues"

[tool.poetry.scripts]
semantic-release = "semantic_release.cli:entry"

[tool.poetry.dependencies]
python = "~3.7 || ~3.8 || ~3.9"

click = "^8.0"
click_log = "^0.3"
gitpython = "^3.1"
semver = "^2.13"
twine = "^3.7"
requests = "^2.27"
wheel = "*"
python-gitlab = "^3.1"
tomlkit = "^0.8"
dotty-dict = "^1.3"
chevron = "^0.14"
invoke = "^1.6"
dynaconf = {extras = ["toml", "ini"], version = "^3.1"}

emoji = { version = "^1.6", optional = true }

[tool.poetry.extras]
emoji = ["emoji"]

[tool.poetry.dev-dependencies]
emoji = "^1.6"
# test
coverage = "^6.2"
pytest = "^6.2"
pytest-cov = "^3.0"
pytest-xdist = "^2.5"
pytest-mock = "^3.6"
responses = "^0.17"
mock = "^4.0"
# docs
# dev
tox = "^3.24"
isort = "^5.10"
black = "^21.12b0"
# mypy
mypy = "*"
types-requests = "*"
types-emoji = "*"
ipdb = "^0.13"
pytest-deadfixtures = "^2.2"

[tool.semantic_release]
branch = "main"
build_command = "poetry build"
version_variable = "semantic_release/__init__.py:__version__"
version_toml = "pyproject.toml:tool.poetry.version"

[tool.isort]
# isort configuration:
# https://pycqa.github.io/isort/docs/configuration/options.html
profile = "black"
line_length = 99
balanced_wrapping = true
indent = 4
use_parentheses = true
skip = ".tox,venv"

[tool.black]
line_length = 120


[tool.mypy]
ignore_missing_imports = true

[tool.coverage.run]
# Coverage configuration:
# https://coverage.readthedocs.io/en/latest/config.html
# https://coverage.readthedocs.io/en/latest/config.html#run
source = ["semantic_release"]
omit = ["*/tests/*"]

[tool.coverage.report]
# https://coverage.readthedocs.io/en/latest/config.html#report
exclude_lines =[
  "pragma: no cover",
  "raise AssertionError",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
]

[tool.pytest.ini_options]
# pytest configuration:
# https://docs.pytest.org/en/stable/customize.html
python_files = ["tests/test_*.py", "tests/**/test_*.py"]

markers = [
  "functional",  # mark tests as a functional test
  "unit",        # mark test as a unit test
]

# Directories that are not visited by pytest collector:
norecursedirs = [
  "*.egg",
  ".eggs",
  "dist",
  "build",
  "docs",
  ".tox",
  ".git",
  ".gitlab",
  "__pycache__",
  ".mypy_cache",
  ".pytest_cache",
]
addopts =[
  "-v",
  "--strict-markers",
  "--strict-config",
  "--tb=short",
  "--doctest-modules",
  "--cov=semantic_release",
  "--cov-report=term-missing:skip-covered",
  "--cov-report=html",
  "--no-cov-on-fail"
]
